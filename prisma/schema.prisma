// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Stock{
  StockIN
  StockOUT
}
enum Location{
  NONE
  Location1
  Location2
}
model Product {
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  itemName   String
  defaultUnit String?
  hsnCode    String?
  tax        String?
  category   String?
  description String?
  minStock   String?
  maxStock   String?

  inventoryEntries Inventory[] // Add this line to create the reverse relation

  @@map("products")
}
model Service {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  sacCode       String?
  description   String?
  sellingPrice  String?
  tax           String?
  category      String?
  providers     String[]
  linkProducts  String[]
  
  inventoryEntries Inventory[] // Add this line to create the reverse relation

  @@map("services")
}
model Inventory {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  productId     String   @db.ObjectId
  serviceId     String   @db.ObjectId
  updateStock   Stock    @default(StockIN)
  quantity      Int
  batchNumber   String
  expiry        DateTime
  code          String
  location      Location @default(NONE)
  distributor   String
  totalCost     String?
  costPerItem   String?
  sellingPrice  String?
  profitMargin  String?
  balanceDue    Boolean? // For 'Add as Balance due under distributor'

  product       Product @relation(fields: [productId], references: [id])
  service       Service @relation(fields: [serviceId], references: [id])

  @@map("inventory")
}

